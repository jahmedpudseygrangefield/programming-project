--[[
----> LOADER <----

this script can be applied to ever level making it interlaced
OVERALL THIS HANDLES LOADING LEVELS

the currentlevel script is based off the a system implemented in the spotter tutorial, 
but its being redesigned to fit my needs and after a while it will be unrecognisable compared to original
]]

function init(self) 
	msg.post(".", "acquire_input_focus") --allows for inputs (gonna be necessary for the menu system
	--msg.post("#menu_proxy", "load") --loads the menu system when the thing is booted
	--self.current_collection = "#menu_proxy"	

	--used for jumping to collections to test
	msg.post("#level1A_dont&rather_proxy", "load")
end

function final(self)
	msg.post(".","release_input_focus") --this does inverse of acquire focus
end


--LOADER FUNCTION (GONNA BE LONG)
function on_message(self, message_id, message, sender)
	--MENU LOADER
	if message_id == hash("proxy_loaded") then
		msg.post(sender, "enable")

	elseif message_id == hash("introduction") then --boots up introduction after begin is selected
		msg.post(self.current_collection, "unload")
		msg.post("#introduction_proxy", "load")
		self.current_collection = "#introduction_proxy"
		

	elseif message_id == hash("level0") then
		msg.post(self.current_collection, "unload") --unlodas the main menu when the button is pressed
		msg.post("#level0_proxy", "load") --loads the main menu
		self.current_collection = "#level0_proxy" --sets the currentcollection to this so it can be unloaded later


	--code that shutsdown the game when pressed
	elseif message_id == hash("shutdown") then
		msg.post(os.exit())


		--WIP apart of the new message solution - will contain many mini collections
		--MINI COLLECTIONS - 1A - SET 0:
	elseif message_id == hash("load_level1A_fritz") then 
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_fritz_proxy", "load")
		self.current_collection = "#level1A_fritz_proxy"

	elseif message_id == hash("load_level1A_uncomfortable&voiceardio") then
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_uncomfortable&voiceradio_proxy", "load")
		self.current_collection = "#level1A_uncomfortable&voiceradio_proxy"

	elseif message_id == hash("load_level1A_nicetomeet") then 
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_nicetomeetyou_proxy", "load")
		self.current_collection = "#level1A_nicetomeetyou_proxy"

	elseif message_id == hash("load_level1A_littletired&becausetired") then 
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_littletired&becausetired_proxy", "load")
		self.current_collection = "#level1A_littletired&becausetired_proxy"

	elseif message_id == hash("load_level1A_fine&might") then 
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_might&fine_proxy", "load")
		self.current_collection = "#level1A_might&fine_proxy"

		--1A - SET 1:
	elseif message_id == hash("load_level1A_4choices") then 
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_4choices_proxy", "load")
		self.current_collection = "#level1A_4choices_proxy"

	elseif message_id == hash("load_level1A_dont&rather") then 
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_dont&rather_proxy", "load")
		self.current_collection = "#level1A_dont&rather_proxy"

	elseif message_id == hash("load_level1A_then&howknow") then 
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_then&howknow_proxy", "load")
		self.current_collection = "#level1A_then&howknow_proxy"

		--1A - SET 2
	elseif message_id == hash("load_level1A_ignore&ignore") then 
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_ignore&ignore_proxy", "load")
		self.current_collection = "#level1A_ignore&ignore_proxy"

	elseif message_id == hash("load_level1A_dontworry&rathernot") then 
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_dont&rather_proxy", "load")
		self.current_collection = "#level1A_dont&rather_proxy"

	elseif message_id == hash("load_level1A_okthen") then 
		msg.post(self.current_collection, "unload")
		msg.post("level1A_okthen_proxy", "load")
		self.current_collection = "#level1A_okthen_proxy"

	elseif message_id == hash("load_level1A_whatdoyoumean") then 
		msg.post(self.current_collection, "unload")
		msg.post("#level1A_whatdoyoumean_proxy", "load")
		self.current_collection = "#level1A_whatdoyoumean_proxy"
	end
end