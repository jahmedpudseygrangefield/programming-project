--[[
This should collect the trigger messa\ge from trigger script
When the message is collected, it should display the gui 

the idea is for the gui to be invisible, and then appear when the trigger happens movement should be stopped 
and the player responds and the menu dissapears again
]]


--=============================================================--
--system that makes the menu appear and dissapear

--gotta reverse this later on 
function init(self)
	msg.post(".", "release_input_focus") --1) initially restricts input from the mouse 
	local node = gui.get_node("level_choice0_parent")
	gui.set_enabled(node, disabled)
end

--this function will take the message from the trigger 
--then it should make the menu re-appear
function on_message(self, message_id, message, sender)
	if message_id == hash("level0_level_choice") then
		local node = gui.get_node("level_choice0_parent")
		gui.set_enabled(node, true)
		msg.post(".", "acquire_input_focus") --2) then allows input from the mouse when gui appears
	end
end


--=============================================================================--
--actual GUI choice system
--WIP
function on_input(self, action_id, action)
	if action.pressed and gui.pick_node(gui.get_node("0A"), action.x, action.y) then 
		msg.post("main:/controller", "load_level1A")
		local node = gui.get_node("level_choice0_parent")
		gui.set_enabled(node, false) 
		msg.post(".", "release_input_focus") -- 3) then restricts mouse input when the GUI dissapears


	elseif action.pressed and gui.pick_node(gui.get_node("0B"), action.x, action.y) then
		msg.post("main:/controller", "load_level1B")
		local node = gui.get_node("level_choice0_parent")
		gui.set_enabled(node, false) 
		msg.post(".", "release_input_focus")
	end
end