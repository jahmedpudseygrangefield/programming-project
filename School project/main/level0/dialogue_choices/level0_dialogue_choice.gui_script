--[[ 
General plan: 
Initially disable all gui's 
Then depending on the first choice the next apropriate GUI should appear 
hopefully a single script will be necessary 
]]

--disables the dialogue choice gui straight away 
function init(self)
	msg.post(".", "release_input_focus") --1) initially restricts input from the mouse 
	local node0 = gui.get_node("dialogue_choice0_parent")
	gui.set_enabled(node0, false)
end

--====================================================================================================
--GUI 0

--when the trigger is activated the GUI appears
function on_message(self, message_id, message, sender)
	if message_id == hash("level0_dialogue_choice") then
		local node0 = gui.get_node("dialogue_choice0_parent") 
		gui.set_enabled(node0, true)
		msg.post(".", "acquire_input_focus") --2) then allows input from the mouse when gui is appears
	end
end


function on_input(self, action_id, action)
	if action.pressed and gui.pick_node(gui.get_node("slim"), action.x, action.y) then 
		local node0 = gui.get_node("dialogue_choice0_parent")
		gui.set_enabled(node0, false) 
		msg.post(".", "release_input_focus") -- 3) then restricts mouse input when the GUI dissapears

		--this should completely disable the related trigger stopping the double glitch
		msg.post("/trigger#dialogue_trigger0", "disable")

	end
end

