function init(self)
	msg.post(".", "release_input_focus")
	local node_howknow = gui.get_node("then&howknow_parent")
	gui.set_enabled(node_howknow, false)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("dialogue_response_then&howknow") then 
		local node_howknow = gui.get_node("then&howknow_parent") 
		gui.set_enabled(node_howknow, true)

		msg.post(".", "acquire_input_focus")
		msg.post("/trigger#dialogue_trigger_then&howknow", "disable")
		
	end
end

function on_input(self, action_id, action)
	--     dialogue option 
	if action_id == hash("touch") and gui.pick_node(gui.get_node("okthen"), action.x, action.y) then
		--GUI disappears after option is selected & takesaway input 
		local  node_howknow = gui.get_node("then&howknow_parent")
		gui.set_enabled(node_howknow, false) 
		msg.post(".", "release_input_focus")

		--Disables collision & enables trigger for next apropriate response 
		msg.post("/collion_objects#dialogue_collision_then&howknow", "disable")
		msg.post("/trigger#level_trigger_okthen", "enable") -- need to add next step triggers 

	elseif action_id == hash("touch") and gui.pick_node(gui.get_node("howknow"), action.x, action.y) then
		--GUI disappears after option is selected & takesaway input 
		local  node_howknow = gui.get_node("then&howknow_parent")
		gui.set_enabled(node_howknow, false) 
		msg.post(".", "release_input_focus")

		--Disables collision & enables trigger for next apropriate response 
		msg.post("/trigger#dialogue_trigger_then&howknow", "disable")
		msg.post("/trigger#level_trigger_whatdoyoumean", "enable") -- need to add next step triggers 

	end
end